
```{r}
library(dplyr)
library(tidyverse)
library(DBI)
```

Reading in the data and combining the data frames using the code provided.
```{r}
d1 =read.table("student-mat.csv",sep=";",header=TRUE)
d2 =read.table("student-por.csv",sep=";",header=TRUE)

d3=merge(d1,d2,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
print(nrow(d3)) # 382 students
```

Reading in the data and combining using functions from the tidyverse. It gives me a message "Warning: Detected an unexpected many-to-many relationship between `x` and `y`."
```{r}
mat2 <- read.csv("student-mat.csv", sep = ";", header = TRUE)
por2 <- read.csv("student-por.csv", sep = ";", header = TRUE)

combined <- inner_join(mat2, por2, by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
```

Using an inner_join() on all variables other than G1, G2, G3, paid, and absences. 
```{r}
join_exclusions <- setdiff(colnames(mat2), c("G1", "G2", "G3", "paid", "absences"))
exercise_combine <- inner_join(mat2, por2, by = join_exclusions)
```

Next, for the math data, Portuguese, and combined data, choosing four categorical variables of interest and converting those into factor variables in each tibble using the mutate() function.
```{r}
mat2 <- mat2 |>
  mutate(romantic = as.factor(romantic),
         internet = as.factor(internet),
         famsup = as.factor(famsup),
         activities = as.factor(activities))

por2 <- por2 |>
  mutate(romantic = as.factor(romantic),
         internet = as.factor(internet),
         famsup = as.factor(famsup),
         activities = as.factor(activities))

exercise_combine <- exercise_combine |>
  mutate(romantic = as.factor(romantic),
         internet = as.factor(internet),
         famsup = as.factor(famsup),
         activities = as.factor(activities))
```

Looking at how the data is stored.
```{r}
str(exercise_combine)
```

Documenting missing values in the data.
```{r}
sum_na <- function(column) {
  sum(is.na(column))
}
na_counts <- exercise_combine |>
  summarize(across(everything(), sum_na))
na_counts
```

Creating a one-way contingency table. From this table we see that there are 221 people from the data set who are not in a romantic relationship, and 99 people who are.
```{r}
one_way <- table(exercise_combine$romantic)
one_way
```

Creating a two-way contingency table. From this, we can see that 
```{r}
two_way <- table(exercise_combine$romantic, exercise_combine$activities)
two_way
```
Creating a three-way contigency table. From this we gather that 
```{r}
three_way <- table(exercise_combine$romantic, exercise_combine$activities, exercise_combine$internet)
three_way
```

Creating a conditional two-way table using table() by subsetting the data by females and then creating the table.
```{r}
sex_filter <- filter(exercise_combine, sex == "F")

female_table <- table(sex_filter$romantic, sex_filter$activities)
female_table
```

Create a conditional two-way table using table() by creating a three-way table and subsetting it.
```{r}
subset_table <- table(exercise_combine$romantic, exercise_combine$activities, exercise_combine$famsup)
subset_table

subset_guardian_table <- subset_table[1,,]
subset_guardian_table
```

Creating a two-way contingency table using group_by() and summarize().
```{r}
exercise_combine |>
  group_by(romantic, activities) |>
  drop_na(romantic, activities) |>
  summarize(count = n()) |>
  pivot_wider(names_from = activities, values_from = count)
```

